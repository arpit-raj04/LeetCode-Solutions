/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
bool hasCycle(struct ListNode *head) {
    if (head == NULL || head->next == NULL) {
        return false; // No cycle if list is empty or has only one node
    }
    
    struct ListNode *slow = head;
    struct ListNode *fast = head->next;

    while (slow != fast) {
        if (fast == NULL || fast->next == NULL) {
            return false; // No cycle if fast reaches the end
        }
        
        slow = slow->next;         
        fast = fast->next->next;   
    }

    return true; // Cycle detected if slow and fast meet
}
