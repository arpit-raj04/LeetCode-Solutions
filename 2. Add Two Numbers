#include <stdio.h>
#include <stdlib.h>

// Definition for singly-linked list.
// struct ListNode {
//     int val;
//     struct ListNode *next;
// };

struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    struct ListNode* l3 = NULL; 
    struct ListNode** pt = &l3;
    int carry = 0;

    // Traverse both linked lists
    while (l1 != NULL || l2 != NULL || carry != 0) {
        int sum = carry;

        if (l1 != NULL) {
            sum += l1->val;
            l1 = l1->next;
        }
        
        if (l2 != NULL) {
            sum += l2->val;
            l2 = l2->next;
        }

        carry = sum / 10;
        sum = sum % 10;    
       
        *pt = (struct ListNode*)malloc(sizeof(struct ListNode));
        (*pt)->val = sum;
        (*pt)->next = NULL;
        
        pt = &((*pt)->next); 
    }

    return l3;
}

